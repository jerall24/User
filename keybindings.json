// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "shift+cmd+d",
        "command": "editor.action.duplicateSelection",
        "when": "editorTextFocus"
},
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": " !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "cmd+escape",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus && terminalHasBeenCreated"
    },
    {
        "key": "cmd+escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },

    {
        "key": "cmd+shift+backspace",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },  

	{
		"command": "runCommands",
		"key": "cmd+k cmd+enter", 
		"args": {
		  "commands": [
            "workbench.action.files.save",
            "workbench.action.terminal.focus",
            {
                "command": "workbench.action.terminal.sendSequence",
                "args":{
                    "text": "dbt run -s ${fileBasenameNoExtension}\n"
                }
            },
		  ],
		"description": "Run the model in the active editor.",
        "when": "editorTextFocus"
		}
	  },

	{
		"command": "runCommands",
		"key": "cmd+k cmd+ctrl+enter", 
		"args": {
		  "commands": [
            "workbench.action.files.save",
            "workbench.action.terminal.focus",
            {
                "command": "workbench.action.terminal.sendSequence",
                "args":{
                    "text": "dbt run -s +${fileBasenameNoExtension}\n"
                }
            }
		  ],
		"description": "Run the model in the active editor and all upstream models.",
        "when": "editorTextFocus"
		}
	  },

	{
		"command": "runCommands",
		"key": "cmd+k cmd+alt+enter", 
		"args": {
		  "commands": [
            "workbench.action.files.save",
            "workbench.action.terminal.focus",
            {
                "command": "workbench.action.terminal.sendSequence",
                "args":{
                    "text": "dbt run -s ${fileBasenameNoExtension}+\n"
                }
            }
		  ],
		"description": "Run the model in the active editor and all upstream models.",
        "when": "editorTextFocus"
		}
	  },

	{
        "command": "runCommands",
        "key": "cmd+k cmd+t", 
        "args": {
            "commands": [
            "workbench.action.files.save",
            "workbench.action.terminal.focus",
            {
                "command": "workbench.action.terminal.sendSequence",
                "args":{
                    "text": "dbt test -s ${fileBasenameNoExtension} --store-failures\n"
                }
            }
            ],
        "description": "Run tests for the model in the active editor and all upstream models.",
        "when": "editorTextFocus"
        }
    },

    {
        "key": "cmd+k cmd+,",
        "command": "runCommands",
        "when": "editorTextFocus",
        "args": {
            "commands": [
                "editor.action.insertCursorAtEndOfEachLineSelected",
                "cursorHome",
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "snippet": ", $TM_SELECTED_TEXT"
                    }
                }
            ]
        },
        "description": "Add a leading comma and space to each line in the selected text"
    },

    {
        "key": "cmd+k cmd+shift+l",
        "command": "runCommands",
        "when": "editorTextFocus && resourceExtname == .md",
        "args": {
            "commands": [
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "snippet": "[${TM_SELECTED_TEXT}]($CLIPBOARD)"
                    }
                }
            ]
        },
        "description": "Format highlighted text as hyperlink using copied URL"
    },

    {
        "key": "cmd+k cmd+shift+b",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.files.save",
                "workbench.action.terminal.focus",
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "git checkout main\n"
                    }
                },
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "git pull\n"
                    }
                },
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "git checkout -b jallard.hotfix.test_fixes_$(date -u -v-4H \"+%m%d%Y\")\n"
                    }
                },
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "sql hotfix\n"
                    }
                },
                "workbench.action.files.save"
            ]
        },
        "description": "Create and switch to a new branch"
    },
    {
        "key": "cmd+k cmd+m",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.files.save",
                "workbench.action.terminal.focus",
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "git checkout main\n"
                    }
                },
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "git pull\n"
                    }
                },
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "git checkout -\n"
                    }
                },
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "git merge main\n"
                    }
                },
                "workbench.action.files.save"
            ]
        },
        "description": "Switch branch to main, pull, switch back, and merge main"
    },

    {
        "key": "cmd+k cmd+shift+o", 
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "open https://justworks.lightning.force.com/lightning/r/Account/$(pbpaste)/view\n" 
        },
        "description": "Open the Salesforce page for the copied object ID"
    },

    {
        "key": "cmd+k cmd+shift+i",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "python3 scripts/get_current_information_schema.py &\n"
        },
        "description": "Fetch and save Snowflake information schema to CSV for prod_ent_db and prod_ent_transform_db"       
    },

    {
        "key": "cmd+k cmd+v",
        "command": "runCommands",
        "when": "editorTextFocus",
        "args": {
            "commands": [
                "editor.action.addSelectionToNextFindMatch",
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "snippet": "${TM_CURRENT_WORD}::varchar as $TM_CURRENT_WORD"
                    }
                }
            ]
        },
        "description": "Add a ::varchar cast with an alias to the current word"
    },  

	{
		"command": "runCommands",
		"key": "cmd+k cmd+f", 
		"args": {
		  "commands": [
            "workbench.action.files.save",
            "workbench.action.terminal.focus",
            {
                "command": "workbench.action.terminal.sendSequence",
                "args":{
                    "text": "sqlfluff fix --templater jinja --dialect snowflake ${file}\n"
                }
            },
		  ],
		"description": "Run SQLfluff fix for the current file",
        "when": "editorTextFocus"
		}
    }


]