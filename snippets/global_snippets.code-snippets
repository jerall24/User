{
	"prod_analytics_db": {
		"prefix": "padb",
		"body": [
			"prod_analytics_db"
		],
		"description": "Replace padb with prod_analytics_db"
	},

	"dev_analytics_db": {
		"prefix": "dadb",
		"body": [
			"dev_analytics_db.dbt_jallard_"
		],
		"description": "Replace dadb with dev_analytics_db"
	},

	"prod_reverse_etl_db": {
		"prefix": "predb",
		"body": [
			"prod_reverse_etl_db"
		],
		"description": "Replace prdb with prod_reverse_etl_db"
	},

	"prod_ent_transform_db": {
		"prefix": "petdb",
		"body": [
			"prod_ent_transform_db"
		],
		"description": "Replace petdb with prod_ent_transform_db"
	},

	"prod_ent_db": {
		"prefix": "pedb",
		"body": [
			"prod_ent_db"
		],
		"description": "Replace pedb with prod_ent_db"
	},

	"relationship test": {
		"prefix": "reltest",
		"body": [
			"- relationships:",
			"\t\tto: ref('prep_$0__${CLIPBOARD/(.*)(_id|_uuid)/$1s/}')",
			"\t\tfield: $CLIPBOARD"
		],
		"description": "Creates a relationship test for the id that is currently in the clipboard"
	},

	"docmd": {
		"prefix": "docmd",
		"body": [
			"{% docs $CLIPBOARD %}\n", 
			"$0\n", 
			"{% enddocs %}\n"
		],
		"description": "Formats a doc block for the respective field in the clipboard in the .md file"
	},
	
	"docyml": {
		"prefix": "docyml",
		"body": [
			"'{{ doc(\"$CLIPBOARD\") }}'"
		],
		"description": "Formats a doc block for the respective field in the clipboard in the .yml file"
	},
	
	"table materialization block": {
		"prefix": "configtable",
		"body": [
			"{{",
			"	config(",
			"		materialized='table'",
			"	)",
			"}}"
		],
		"description": "Config block to materialize a model as a table. To be added to a sql file."
	},

	"count query": {
		"prefix": "sqlcount",
		"body": [
			"select $2, count(1)",
			"from dev_analytics_db.dbt_jallard_$1",
			"group by all",
			"order by 2 desc",
			";"
		],
		"description": "Boilerplate SQL query to get the count of values in a specific table"
	},

	"min max query": {
		"prefix": "sqlminmax",
		"body": [
			"select $2, min($3), max($3)",
			"from dev_analytics_db.dbt_jallard_$1",
			"group by all",
			"order by 2",
			";"
		],
		"description": "Boilerplate SQL query to get the min and max of a field in a specific table"
	},

	"table columns": {
		"prefix": "tablecolumns",
		"body": [
			"select listagg(lower(column_name), '\\n\\t, ') within group (order by ordinal_position)",
			"from ${CLIPBOARD/(.+)\\.(.+)\\.(.+)/$1/}.information_schema.columns",
			"where lower(table_name) = lower('${CLIPBOARD/(.+)\\.(.+)\\.(.+)/$3/}')",
			"and lower(table_schema) = lower('${CLIPBOARD/(.+)\\.(.+)\\.(.+)/$2/}')",
			";"
		],
		"description": "List out in ascending order according to the ordinal position 
		all the columns in a table based on the database.schema.table copied in the clipboard."
	}

}